{
    "plantuml.exportCurrent.title": "Exporter Diagramme",
    "plantuml.exportDocument.title": "Exporter Tous les Diagrammes de ce Fichier",
    "plantuml.exportWorkspace.title": "Exporter Tous les Diagrammes de l'Espace de Travail",
    "plantuml.preview.title": "Prévisualiser Diagramme",
    "plantuml.URLCurrent.title": "Générer URL pour ce Diagramme",
    "plantuml.URLDocument.title": "Générer URLs pour tous les Diagrammes de ce Fichier",
    "plantuml.extractSource.title": "Extraire le Code Source PlantUML à partir d'une Image",
    "plantuml.configuration.configTitle": "Configuration de PlantUML",
    "plantuml.configuration.exportFormat": "Format d'exportation. Laissez vide pour avoir le choix lors de chaque export",
    "plantuml.configuration.jar": "Emplacement du fichier 'plantuml.jar' alternatif. Laissez vide pour utiliser le 'jar' intégré à cette extension",
    "plantuml.configuration.diagramsRoot": "Répertoire où sont situés les diagrammes à exporter. Le chemin est relatif au dossier à la racine de l'espace de travail",
    "plantuml.configuration.fileExtensions": "Extensions des fichiers considérés comme exportables. Vous pouvez ajouter vos propres extensions pour permettre l'extraction de diagrammes contenu dans des fichiers de code source, par exemple \".java\"",
    "plantuml.configuration.exportSubFolder": "Créer un dossier séparé pour chaque fichier source dans le répertoire de sortie ?",
    "plantuml.configuration.exportConcurrency": "Nombres de threads à utiliser lors de l'exportation de plusieurs diagrammes en parallele",
    "plantuml.configuration.exportOutDir": "Répertoire où seront exportés les diagrammes. Le chemin est relatif au dossier à la racine de l'espace de travail",
    "plantuml.configuration.previewAutoUpdate": "Mettre à jour automatiquement la fenêtre de prévisualisation ?",
    "plantuml.configuration.previewSnapIndicators": "Afficher les indicateurs d'épinglement dans la fenêtre de prévisualisation ?",
    "plantuml.configuration.server": "URL du serveur Plantuml lors de l'utilisation du moteur de rendu 'PlantUMLServer'",
    "plantuml.configuration.urlFormat": "Format d'exportation utilisé lors de la génération de l'URL. Laissez vide pour avoir le choix à chaque exportation",
    "plantuml.configuration.urlResult": "Type d'URL à générer. URL simple ou URL prête à l'emploi pour l'utilisation dans un document MarkDown",
    "plantuml.configuration.render": "Sélectionnez le type de moteur de rendu à utiliser.\nLocal: Génère les diagrammes localement de manière traditionnelle. Vous devez configurer JAVA et GraphViz avant l'utilisation.\nPlantUMLServer: Génère les diagrammes avec l'aide d'un serveur. L'URL du serveur doit être spécifiée dans \"plantuml.server\". Cette méthode est beaucoup plus rapide, mais requiers un serveur.\nLocal est la configuration par défaut",
    "plantuml.configuration.includes": "Fichiers ou dossiers à inclure avant la prévisualisation ou exportation des diagrammes. Ceci permet d'éviter d'avoir à écrire \"!include chemin/a/inclure.wsd\" for chaque fichier",
    "plantuml.configuration.commandArgs": "'commandArgs' vous permet d'ajouter des arguments à la commande 'java', par exemple \"-DPLANTUML_LIMIT_SIZE=8192\".",
    "plantuml.configuration.jarArgs": "'jarArgs' vous permet d'ajouter des arguments à 'plantuml.jar', par exemple \"-config plantuml.config\".",
    "plantuml.configuration.exportMapFile": "Determine whether export image map (.cmapx) file when export.",
    "plantuml.configuration.java": "Emplacement de l'exécutable 'java'",
    "plantuml.configuration.includeSearch": "Détermine le répertoire de base dans lequel chercher les fichiers à inclure\nDiagramsRoot: Le répertoire défini dans le paramètre 'diagramsRoot', ce chemin d'importation sera consistant pour tous les fichiers de l'espace de travail\nSourceFileDir: Le répertoire du fichier source courant, ce chemin d'importation peut varier en pour chaque fichier"
}